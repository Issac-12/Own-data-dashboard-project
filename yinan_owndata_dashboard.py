# -*- coding: utf-8 -*-
"""Group_Activity_G8_IPL_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I22PX4DI4Bxyx28-Qssf12lxhW4lryMM
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
print("Setup Complete")

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
print("Setup Complete")

df = pd.read_csv("/content/salaries_cyber.csv")
df



df1= df.columns
df1

df2=df[['work_year','salary_in_usd']]
df2





handling_data = df.loc[:,['work_year', 'remote_ratio']]
mean_remote2020 = handling_data.loc[handling_data["work_year"] == 2020]["remote_ratio"].mean()
mean_remote2021 = handling_data.loc[handling_data["work_year"] == 2021]["remote_ratio"].mean()
mean_remote2022 = handling_data.loc[handling_data["work_year"] == 2022]["remote_ratio"].mean()
means = [mean_remote2020, mean_remote2021, mean_remote2022]
years = ["2020", "2021", "2022"]

df_plot = pd.DataFrame(data = means, index = years, columns= ["Remote Ratio Mean"])
df_plot.index = df_plot.index.map(int) # let's change the index values of Years to type integer for plotting
df_plot.plot(kind='line', figsize=(12,6))

plt.title(f'Mean Remote Jobs Ratio in CyberSecurity since 2020')
plt.ylabel('Remote Ratio')
plt.xlabel('Years')



line_data2 = df.groupby('experience_level')['salary_in_usd'].mean().reset_index()
line_data2.head()

fig = go.Figure(data=go.Scatter(x=line_data2['experience_level'], y=line_data2['salary_in_usd'], mode='lines', marker=dict(color='blue')))
fig.update_layout(title='Experience Level vs Average Salary', xaxis_title='Expereince Level', yaxis_title='Average Salary')
fig.show()

####################################################################################################



"""# IDE dashborad

"""

!pip install dash

#bar chart start'compszslexp'
# Import required packages
import pandas as pd
import plotly.express as px
import dash
import dash_html_components as html
import dash_core_components as dcc

# Read the airline data into pandas dataframe
cyber_data =  pd.read_csv('/content/salaries_cyber.csv', 
                            dtype={'Div1Airport': str, 'Div1TailNum': str, 
                                   'Div2Airport': str, 'Div2TailNum': str})

# Randomly sample 500 data points. Setting the random state to be 42 so that we get same result.
data = cyber_data.sample(n=500, random_state=42)

# Pie Chart Creation
compszslexp = px.bar(df, x="company_size", y="salary_in_usd", color="experience_level", barmode="group")
compszslexp.update_layout(title = 'salary for diff. comapny size and exerience level', xaxis_title = 'size of comany',
                          yaxis_title ='salary(USD)', 
                          xaxis={'categoryorder':'array', 'categoryarray':['S','M','L']}
                          )
compszslexp.show()
#end of bar chart 'compszslexp'

#sunburst chart chart start'sunb'
sunb = px.sunburst(df, path=['company_location', 'employee_residence', 'experience_level'], color='experience_level')
sunb.show()

#end of bar chart 'compszslexp'



###########################################################################

# Create a dash application
app = dash.Dash(__name__)

# Get the layout of the application and adjust it.
# Create an outer division using html.Div and add title to the dashboard using html.H1 component
# Add description about the graph using HTML P (paragraph) component
# Finally, add graph component.
app.layout = html.Div(children=[html.H1('salary in cyber serc jobs bashboard main title',
                                        style={'textAlign': 'center', 
                                        'color': '#503D36', 
                                        'font-size': 40}),
                                #first figure
                                html.P('what we expect are larger the company higher the salary.', 
                                                style={'textAlign':'left', 'color': '#F57241'}),
                                dcc.Graph(figure=compszslexp),
                                #second figure 
                                html.P('location of people working for company in diff.country', 
                                                style={'textAlign':'left', 'color': '#F57266'}),
                                dcc.Graph(figure=sunb),
                                    ])

# Run the application                   
if __name__ == '__main__':
    app.run_server()

